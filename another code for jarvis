const btn = document.querySelector('.talk');
const content = document.querySelector('.content');
let todoList = [];  // To-do list array

// Speech function to respond with JARVIS's voice
function speak(text) {
    const text_speak = new SpeechSynthesisUtterance(text);
    text_speak.rate = 1;
    text_speak.volume = 1;
    text_speak.pitch = 1;
    window.speechSynthesis.speak(text_speak);
}

// Greeting function based on time of day
function wishMe() {
    const hour = new Date().getHours();
    if (hour >= 0 && hour < 12) {
        speak("Good Morning Boss...");
    } else if (hour >= 12 && hour < 17) {
        speak("Good Afternoon Master...");
    } else {
        speak("Good Evening Sir...");
    }
}

// Initialize JARVIS on page load
window.addEventListener('load', () => {
    speak("Initializing JARVIS...");
    wishMe();
});

// Speech recognition setup
const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
const recognition = new SpeechRecognition();

recognition.onresult = (event) => {
    const currentIndex = event.resultIndex;
    const transcript = event.results[currentIndex][0].transcript;
    content.textContent = transcript;
    takeCommand(transcript.toLowerCase());
};

btn.addEventListener('click', () => {
    content.textContent = "Listening...";
    recognition.start();
});

// Main function to handle recognized commands
function takeCommand(message) {
    if (message.includes('hey') || message.includes('hello')) {
        speak("Hello Sir, How may I assist you?");
    } else if (message.includes("open google")) {
        window.open("https://google.com", "_blank");
        speak("Opening Google...");
    } else if (message.includes("open youtube")) {
        window.open("https://youtube.com", "_blank");
        speak("Opening YouTube...");
    } else if (message.includes("add task")) {
        const task = message.replace("add task", "").trim();
        todoList.push(task);
        speak(`Task added: ${task}`);
    } else if (message.includes("show tasks")) {
        const tasks = todoList.length ? todoList.join(", ") : "You have no tasks.";
        speak(`Your tasks are: ${tasks}`);
    } else if (message.includes("clear tasks")) {
        todoList = [];
        speak("All tasks cleared.");
    } else if (message.includes("what is") || message.includes("who is") || message.includes("what are")) {
        window.open(`https://www.google.com/search?q=${message.replace(" ", "+")}`, "_blank");
        speak("This is what I found on the internet regarding " + message);
    } else if (message.includes("time")) {
        const time = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
        speak("The current time is " + time);
    } else if (message.includes("date")) {
        const date = new Date().toLocaleDateString([], { month: 'long', day: 'numeric' });
        speak("Today's date is " + date);
    } else {
        window.open(`https://www.google.com/search?q=${message.replace(" ", "+")}`, "_blank");
        speak("I found some information for " + message + " on Google.");
    }
}

// Function to create reminders (using browser notifications)
function setReminder(message) {
    const reminderText = message.replace("remind me to", "").trim();
    speak(`Reminder set for: ${reminderText}`);

    // Show a notification for the reminder
    if (Notification.permission === "granted") {
        setTimeout(() => {
            new Notification("JARVIS Reminder", { body: reminderText });
            speak("This is your reminder for " + reminderText);
        }, 5000); // This is just an example delay of 5 seconds
    } else if (Notification.permission !== "denied") {
        Notification.requestPermission().then(permission => {
            if (permission === "granted") {
                setTimeout(() => {
                    new Notification("JARVIS Reminder", { body: reminderText });
                    speak("This is your reminder for " + reminderText);
                }, 5000);
            }
        });
    }
}

// Add reminder handling to the main command function
function takeCommand(message) {
    if (message.includes("remind me to")) {
        setReminder(message);
    } else if (message.includes('hello') || message.includes('hey')) {
        speak("Hello Sir, How can I help?");
    }
    // (other conditions go here)
}
