const btn = document.querySelector('.talk');
const content = document.querySelector('.content');
let todoList = [];  // Array to store tasks
let currentVolume = 1;  // Default volume

// Function to make JARVIS speak
function speak(text) {
    const textSpeak = new SpeechSynthesisUtterance(text);
    textSpeak.rate = 1;
    textSpeak.volume = currentVolume;
    textSpeak.pitch = 1;
    window.speechSynthesis.speak(textSpeak);
}

// Greet user based on time of day
function wishMe() {
    const hour = new Date().getHours();
    if (hour >= 0 && hour < 12) {
        speak("Good Morning Boss...");
    } else if (hour >= 12 && hour < 17) {
        speak("Good Afternoon Master...");
    } else {
        speak("Good Evening Sir...");
    }
}

// Introduce the assistant
function introduceAssistant() {
    speak("I am JARVIS, your personal assistant, created by Sachin.");
}

// Initialize JARVIS on page load
window.addEventListener('load', () => {
    speak("Initializing JARVIS...");
    wishMe();
    introduceAssistant();
});

// Speech recognition setup
const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
const recognition = new SpeechRecognition();

recognition.onresult = (event) => {
    const currentIndex = event.resultIndex;
    const transcript = event.results[currentIndex][0].transcript;
    content.textContent = transcript;
    takeCommand(transcript.toLowerCase());
};

recognition.onerror = (event) => {
    speak("Sorry, I didn't catch that. Please try again.");
};

btn.addEventListener('click', () => {
    content.textContent = "Listening...";
    recognition.start();
});

// Main function to handle recognized commands
function takeCommand(message) {
    if (message.includes('hello') || message.includes('hey')) {
        speak("Hello Sir, How may I assist you?");
    } else if (message.includes("open google")) {
        window.open("https://google.com", "_blank");
        speak("Opening Google...");
    } else if (message.includes("open youtube")) {
        window.open("https://youtube.com", "_blank");
        speak("Opening YouTube...");
    } else if (message.includes("play") && message.includes("youtube")) {
        const videoName = message.replace("play", "").replace("youtube", "").trim();
        window.open(`https://www.youtube.com/results?search_query=${encodeURIComponent(videoName)}`, "_blank");
        speak(`Searching for ${videoName} on YouTube...`);
    } else if (message.includes("weather")) {
        speak("The current temperature is 25 degrees Celsius with clear skies."); // Hardcoded weather info
    } else if (message.includes("set an alarm for")) {
        setAlarm(message);
    } else if (message.includes("increase volume")) {
        adjustVolume('increase');
    } else if (message.includes("decrease volume")) {
        adjustVolume('decrease');
    } else if (message.includes("mute")) {
        adjustVolume('mute');
    } else if (message.includes("show tasks")) {
        const tasks = todoList.length ? todoList.join(", ") : "You have no tasks.";
        speak(`Your tasks are: ${tasks}`);
    } else if (message.includes("clear tasks")) {
        todoList = [];
        speak("All tasks cleared.");
    } else {
        speak("I'm sorry, I didn't understand that.");
    }
}

// Function to set an alarm
function setAlarm(message) {
    const time = message.match(/\d{1,2}:\d{2}/);
    if (time) {
        const [hours, minutes] = time[0].split(':').map(Number);
        const now = new Date();
        const alarmTime = new Date(now.getFullYear(), now.getMonth(), now.getDate(), hours, minutes);
        const timeToAlarm = alarmTime - now;

        if (timeToAlarm > 0) {
            speak(`Alarm set for ${time[0]}.`);
            setTimeout(() => {
                speak("Alarm ringing! Time to wake up!");
            }, timeToAlarm);
        } else {
            speak("The time you set is in the past. Please set a future time.");
        }
    } else {
        speak("Please specify a valid time in HH:MM format.");
    }
}

// Function to adjust volume
function adjustVolume(action) {
    if (action ===
